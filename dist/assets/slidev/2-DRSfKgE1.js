import{o as s,c as a,k as n,q as l,s as i,z as o,e,a6 as t}from"../modules/vue-BNWjpuRG.js";import{I as u}from"./default-02f_IY38.js";import{_ as c,a7 as r}from"../index-joG4pe33.js";import{p as d,u as m,f as h}from"./context-D75cQaRR.js";import"../modules/shiki-DQGjO4Jx.js";const p=e("h1",null,"When to use Lightning?",-1),f=e("p",null,[t("Lightning makes things easier and abstracts the details. In research (or in edge cases), you might need to go deeper. For example, "),e("code",null,"torch.compile"),t(", custom metrics, etc.")],-1),g=e("ul",null,[e("li",null,[t("📝 "),e("strong",null,"Incentives"),t(" - compete with AnyScale, Ray, SkyPilot (multi-cloud, recommended)")]),e("li",null,[t("🚀 "),e("strong",null,"Risk"),t(" - Need to be careful relying on venture capital-backed code (ideal customer profile may be different, may need to pivot, short runway and high return expectations from LPs)")]),e("li",null,[e("strong",null,"🔍 Research"),t(" - usually need to use algorithms like HyperBand and use fully-sharded data parallel models for best performance. Supported in Ray and SkyPilot, work-in-progress for Lightning.")]),e("li",null,[e("strong",null,"🔥 Time Horizon"),t(" - behavior change is hard. Your future self will thank you but need to learn by experience when to use a shortcut / abstraction versus when to use the details. For me, I need to see the details almost always (not assembly/CUDA regularly though!)")])],-1),_={__name:"2",setup(y){return d(r),m(),(k,b)=>(s(),a(u,l(i(o(h)(o(r),1))),{default:n(()=>[p,f,g]),_:1},16))}},L=c(_,[["__file","/@slidev/slides/2.md"]]);export{L as default};
